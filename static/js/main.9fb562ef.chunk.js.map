{"version":3,"sources":["Instruments/Instruments.module.css","Header/Header.module.css","Workers/Workers.module.css","Header/Header.jsx","Workers/Worker/Worker.jsx","Workers/Workers.jsx","redux/mainReducer.js","Workers/WorkersContainer.jsx","Instruments/Instruments.jsx","Instruments/InstrumentsContainer.jsx","WorkerCard/WorkerCard.jsx","WorkerCard/WorkerCardContainer.jsx","App.js","serviceWorker.js","redux/redux-store.js","index.js","WorkerCard/WorkerCard.module.css","Workers/Worker/Worker.module.css"],"names":["module","exports","Header","className","styles","header","headerTable","width","Worker","props","styleWorkerList","worker","data","invalid","invalidWorker","selectedWorker","id","join","onClick","selectWorker","cellSpacing","blockLine","infoAlign","fullName","position","moment","birthDay","format","gender","dismissed","Workers","workerList","workers","map","key","initialState","colleagues","positions","genders","dataWorker","workersReducer","state","action","index","findIndex","idWorker","i","length","getUpdatedWorker","property","person","newFullName","newPosition","getUpdatedWorkers","workerItem","type","array","slice","splice","identify","lastWorker","newWorker","newDate","newGender","newDissmised","WorkersContainer","this","React","Component","mapDispatchToProps","connect","workersPage","Instruments","instruments","buttonCenter","addNewWorker","undefined","hideButton","deleteSelectedWorker","InstrumentsContainer","WorkerCard","positionList","value","workerCard","necessaryItem","placeholder","size","onChange","event","onFullNameChanged","target","onPositionChanged","disabled","onBirthDayChanged","onGenderChanged","checked","readOnly","name","onDismissedChanged","WorkerCardContainer","emptyWorkerCard","isInvalid","App","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9fb562ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"instruments\":\"Instruments_instruments__2n1ih\",\"buttonCenter\":\"Instruments_buttonCenter___Azg2\",\"hideButton\":\"Instruments_hideButton__1Vqyc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2vV3e\",\"headerTable\":\"Header_headerTable__1_7q_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"workers\":\"Workers_workers__1hwM3\"};","import React from 'react';\r\nimport styles from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return(\r\n        <div className={styles.header}>\r\n            <table className={styles.headerTable}>\r\n                <tbody>\r\n                    <tr>\r\n                        <td width=\"11%\">Панель инструментов</td>\r\n                        <td>Сотрудники</td>\r\n                        <td>Карточка сотрудника</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport styles from './Worker.module.css';\r\nimport moment from 'moment';\r\n\r\nconst Worker = (props) => {\r\n    //Суммирование css-классов\r\n    let styleWorkerList = [\r\n        styles.worker,\r\n        props.data.invalid && styles.invalidWorker,\r\n        props.selectedWorker === props.data.id && styles.selectedWorker,\r\n    ].join(' ');\r\n\r\n    //Форматирование даты в привычный вид ДД-ММ-ГГГГ\r\n    const dateFormatter = () => {\r\n        debugger\r\n        return moment(props.data.birthDay).format('DD.MM.YYYY');\r\n    }\r\n\r\n    return(\r\n        <div className={styleWorkerList} onClick={() => props.selectWorker(props.data.id)}>\r\n            <table cellSpacing='0'>\r\n                <tbody className={styles.blockLine}>                    \r\n                    <tr>\r\n                        <td>ФИО</td>\r\n                        <td className={styles.infoAlign}>{props.data.fullName}</td>                    \r\n                    </tr>\r\n                    <tr>\r\n                        <td>Должность</td>\r\n                        <td className={styles.infoAlign}>{props.data.position === '' ? '' : props.data.position}</td>                    \r\n                    </tr>\r\n                    <tr>\r\n                        <td>Дата рождения</td>\r\n                        <td className={styles.infoAlign}>{dateFormatter()}</td>                    \r\n                    </tr>\r\n                    <tr>\r\n                        <td>Пол</td>\r\n                        <td className={styles.infoAlign}>{props.data.gender === 'male' ? 'Мужчина' : 'Женщина'}</td>                    \r\n                    </tr>\r\n                    <tr>\r\n                        <td>Статус</td>\r\n                        <td className={styles.infoAlign}>{props.data.dismissed ? 'Уволен(а)' : 'Работает'}</td>                    \r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Worker;","import React from 'react';\r\nimport styles from './Workers.module.css';\r\nimport Worker from './Worker/Worker';\r\n\r\nconst Workers = (props) => {\r\n\r\n    const selectWorker = (id) => {\r\n        props.selectWorker(id);\r\n    }\r\n\r\n    let workerList = props.workers.map(worker => \r\n        <Worker key={worker.id} \r\n                data={worker}\r\n                selectedWorker={props.selectedWorker}\r\n                selectWorker={selectWorker}\r\n    />)\r\n\r\n    return(\r\n        <div className={styles.workers}>\r\n            {workerList}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Workers;","const DELETE_SELECTED_WORKER = 'DELETE_SELECTED_WORKER';\r\nconst ADD_NEW_WORKER = 'ADD_NEW_WORKER';\r\nconst SELECT_WORKER = 'SELECT_WORKER';\r\nconst ON_FULL_NAME_CHANGED = 'ON_FULL_NAME_CHANGED';\r\nconst ON_POSITION_CHANGED = 'ON_POSITION_CHANGED';\r\nconst ON_BIRTH_DAY_CHANGED = 'ON_BIRTH_DATE_CHANGED';\r\nconst ON_GENDER_CHANGED = 'ON_GENDER_CHANGED';\r\nconst ON_DISMISSED_CHANGED = 'ON_DISMISSED_CHANGED';\r\n\r\nlet initialState = {\r\n    //список сотрудников\r\n    workers: [ \r\n        {id: 1, fullName: 'Иванов Иван Иванович', position: 'Директор', birthDay: '1976-08-15', gender: 'male', dismissed: false, colleagues: [4], invalid: false},\r\n        {id: 2, fullName: 'Цаль Виталий Олегович', position: 'Программист', birthDay: '1991-01-19', gender: 'male', dismissed: false, colleagues: [3], invalid: false},\r\n        {id: 3, fullName: 'Иванова Анна Алексеевна', position: 'Аналитик', birthDay: '1998-07-21', gender: 'female', dismissed: false, colleagues: [2], invalid: false},\r\n        {id: 4, fullName: 'Козлов Александр Вадимович', position: 'HR', birthDay: '1990-04-08', gender: 'male', dismissed: true, colleagues: [1, 5], invalid: false},\r\n        {id: 5, fullName: 'Бодров Данила Сергеевич', position: 'Тестер', birthDay: '1985-03-16', gender: 'male', dismissed: false, colleagues: [4], invalid: false}\r\n    ],\r\n    //Список должностей - отправляется в UI в комбобокс\r\n    positions: [\r\n        'Директор',\r\n        'Программист',\r\n        'Аналитик',\r\n        'HR',\r\n        'Тестер',\r\n        'Инженер',\r\n        'Бухгалтер',\r\n        'Стажёр'\r\n    ],\r\n    genders: [\r\n        'male',\r\n        'female'\r\n    ],\r\n    dismissed: [\r\n        true,\r\n        false\r\n    ],\r\n    selectedWorker: null, //id выделеннего сотрудника\r\n    dataWorker: null //данные выделенного сотрудника\r\n}\r\n\r\nconst workersReducer = (state = initialState, action) => {\r\n    let index = -1;\r\n    //поиска свободного индекса для назначения его работнику\r\n    let findIndex = (idWorker) => { \r\n        for (let i = 0; i < state.workers.length; i++){\r\n            if (state.workers[i].id === idWorker){\r\n                index = i;\r\n                break\r\n            }\r\n        }\r\n    }\r\n\r\n    //Получить обновлённого данные работника\r\n    let getUpdatedWorker = (property) => {\r\n        let worker = null;\r\n        state.workers.map(person => {\r\n            if (person.id === state.selectedWorker)\r\n                worker = person;\r\n            return null;\r\n        })\r\n\r\n        if (property === \"fullName\")\r\n            worker.fullName = action.newFullName;\r\n        else if (property === \"position\")\r\n            worker.position = action.newPosition;\r\n        \r\n        if (worker.fullName === '' || worker.position === '')\r\n            worker.invalid = true;\r\n        else \r\n            worker.invalid = false;\r\n\r\n        return worker;\r\n    }\r\n\r\n    //Получить обновлённый список данных работников\r\n    let getUpdatedWorkers = (worker) => {\r\n            return state.workers.map(workerItem => {\r\n                if (workerItem.id === state.selectedWorker)\r\n                    return worker;                    \r\n                else\r\n                    return workerItem;\r\n            })\r\n    }\r\n\r\n    switch (action.type){\r\n        //здесь обрабатываются диспатчи\r\n        case DELETE_SELECTED_WORKER: {\r\n            findIndex(state.selectedWorker);           \r\n            let array = state.workers.slice(0);\r\n            array.splice(index, 1)\r\n\r\n            return{\r\n                ...state,\r\n                workers: array,\r\n                selectedWorker: null               \r\n            }\r\n        }\r\n        case ADD_NEW_WORKER: {\r\n            let identify = () => {\r\n                let lastWorker = state.workers[state.workers.length - 1];\r\n                if (lastWorker)\r\n                    return lastWorker.id + 1\r\n                else return 1;\r\n            }\r\n\r\n            let newWorker = {\r\n                id: identify(), \r\n                fullName: '', \r\n                position: '',\r\n                birthDay: '',\r\n                gender: 'male',\r\n                dismissed: false,\r\n                invalid: true\r\n            }\r\n            return{\r\n                ...state,\r\n                workers: [...state.workers, newWorker],\r\n                dataWorker: newWorker,\r\n                selectedWorker: newWorker.id\r\n            }\r\n        }\r\n        case SELECT_WORKER: {\r\n            findIndex(action.idWorker);     \r\n            let worker = state.workers.slice(0).splice(index, 1)[0]\r\n\r\n            return{\r\n                ...state,\r\n                selectedWorker: action.idWorker,\r\n                dataWorker: worker\r\n            }\r\n        }\r\n        case ON_FULL_NAME_CHANGED: {\r\n            \r\n            let worker = getUpdatedWorker('fullName'); \r\n\r\n            return {\r\n                ...state,\r\n                workers: getUpdatedWorkers(worker),\r\n                dataWorker: {...state.dataWorker, fullName: action.newFullName, invalid: worker.invalid}\r\n            }\r\n        }\r\n        case ON_POSITION_CHANGED: {\r\n\r\n            let worker = getUpdatedWorker('position');\r\n\r\n            return{\r\n                ...state,\r\n                workers: getUpdatedWorkers(worker),\r\n                dataWorker: {...state.dataWorker, position: action.newPosition, invalid: worker.invalid}\r\n            }\r\n        }\r\n        case ON_BIRTH_DAY_CHANGED: {\r\n            return{\r\n                ...state,\r\n                workers: state.workers.map(worker => {\r\n                    if (worker.id === state.selectedWorker)\r\n                        worker.birthDay = action.newDate;\r\n                    return worker;\r\n                }),\r\n                dataWorker: {...state.dataWorker, birthDay: action.newDate}\r\n            }\r\n        }\r\n        case ON_GENDER_CHANGED: {\r\n            return{\r\n                ...state,\r\n                workers: state.workers.map(worker => {\r\n                    if (worker.id === state.selectedWorker)\r\n                        worker.gender = action.newGender;\r\n                    return worker;\r\n                }),\r\n                dataWorker: {...state.dataWorker, gender: action.newGender}\r\n            }\r\n        }\r\n        case ON_DISMISSED_CHANGED: {\r\n            return{\r\n                ...state,\r\n                workers: state.workers.map(worker => {\r\n                    if (worker.id === state.selectedWorker)\r\n                        worker.dismissed = action.newDissmised;\r\n                    return worker;\r\n                }),\r\n                dataWorker: {...state.dataWorker, dismissed: action.newDissmised}\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const deleteSelectedWorkedAC = () => ({type: DELETE_SELECTED_WORKER});\r\nexport const addNewWorkerAC = () => ({type: ADD_NEW_WORKER});\r\nexport const selectWorkerAC = (idWorker) => ({type: SELECT_WORKER, idWorker});\r\nexport const onFullNameChangedAC = (newFullName, isInvalid) => ({type: ON_FULL_NAME_CHANGED, newFullName, isInvalid});\r\nexport const onPositionChangedAC = (newPosition) => ({type: ON_POSITION_CHANGED, newPosition});\r\nexport const onBirthDayChangedAC = (newDate) => ({type: ON_BIRTH_DAY_CHANGED, newDate});\r\nexport const onGenderChangedAC = (newGender) => ({type: ON_GENDER_CHANGED, newGender});\r\nexport const onDismissedChangedAC = (newDissmised) => ({type: ON_DISMISSED_CHANGED, newDissmised});\r\n\r\nexport default workersReducer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Workers from './Workers';\r\nimport { selectWorkerAC } from '../redux/mainReducer';\r\n\r\nclass WorkersContainer extends React.Component{\r\n    render(){\r\n        return <Workers {...this.props}/>        \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        workers: state.workersPage.workers,\r\n        selectedWorker: state.workersPage.selectedWorker\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    selectWorker: selectWorkerAC\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkersContainer);","import React from 'react';\r\nimport styles from './Instruments.module.css';\r\n\r\nconst Instruments = (props) => {\r\n    return(\r\n        <div className={styles.instruments}>\r\n            <div className={styles.buttonCenter}>\r\n                <button onClick={props.addNewWorker}>Добавить</button>\r\n            </div>\r\n            <div className={styles.buttonCenter}>\r\n                <button className={!props.selectedWorker ? styles.hideButton : undefined} onClick={props.deleteSelectedWorker}>Удалить</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Instruments;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteSelectedWorkedAC, addNewWorkerAC } from '../redux/mainReducer';\r\nimport Instruments from './Instruments';\r\n\r\nclass InstrumentsContainer extends React.Component{\r\n    render(){\r\n        return <Instruments deleteSelectedWorker={this.props.deleteSelectedWorker}\r\n                            addNewWorker={this.props.addNewWorker}\r\n                            selectedWorker={this.props.selectedWorker}/>        \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        selectedWorker: state.workersPage.selectedWorker\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    deleteSelectedWorker: deleteSelectedWorkedAC,\r\n    addNewWorker: addNewWorkerAC\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InstrumentsContainer);","import React from 'react';\r\nimport styles from './WorkerCard.module.css';\r\n\r\nconst WorkerCard = (props) => {\r\n    let positionList = props.positions.map(position => {\r\n            return (<option key={position} value={position}>{position}</option>)\r\n        }\r\n    )\r\n\r\n    const onFullNameChanged = (event) => {\r\n        props.onFullNameChanged(event.target.value);\r\n    }\r\n\r\n    const onPositionChanged = (event) => {        \r\n        props.onPositionChanged(event.target.value);\r\n    }\r\n\r\n    const onBirthDayChanged = (event) => {\r\n        props.onBirthDayChanged(event.target.value);\r\n    }\r\n\r\n    const onGenderChanged = (event) => {\r\n        props.onGenderChanged(event.target.value);\r\n    }\r\n\r\n    const onDismissedChanged = (event) => {\r\n        props.onDismissedChanged(event.target.checked);\r\n    }\r\n\r\n    return(\r\n        <div className={styles.workerCard}>\r\n            <table cellSpacing='0'>\r\n                <tbody className={styles.blockLine}>                    \r\n                    <tr>\r\n                        <td>ФИО:</td>\r\n                        <td className={styles.infoAlign}>\r\n                            <span className={styles.necessaryItem}>* </span>\r\n                            <input type=\"text\" placeholder=\"Заполните поле\" value={props.dataWorker.fullName} size=\"30\" onChange={onFullNameChanged}/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Должность:</td>\r\n                        <td className={styles.infoAlign}>\r\n                            <span className={styles.necessaryItem}>* </span>\r\n                            <select value={props.dataWorker.position === '' ? 'init' : props.dataWorker.position} onChange={onPositionChanged}>\r\n                                <option disabled value={'init'}>Укажите должность...</option>\r\n                                {positionList}\r\n                            </select>   \r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Дата рождения:</td>\r\n                        <td className={styles.infoAlign}><input type=\"date\" value={props.dataWorker.birthDay} onChange={onBirthDayChanged}/></td>\r\n                    </tr>\r\n                    <tr onChange={onGenderChanged}>\r\n                        <td>Пол:</td>\r\n                        <td className={styles.infoAlign}>\r\n                            <input checked={props.dataWorker.gender === 'male' ? true : false} readOnly name=\"gender\" type=\"radio\" value=\"male\"/>Муж.\r\n                            <input checked={props.dataWorker.gender === 'female' ? true : false} readOnly name=\"gender\" type=\"radio\" value=\"female\"/>Жен.\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Статус:</td>\r\n                        <td className={styles.infoAlign}>{props.dataWorker.dismissed ? 'Уволен' : 'Работает'} \r\n                                                         <input checked={props.dataWorker.dismissed} type=\"checkbox\" onChange={onDismissedChanged}/>\r\n                        </td>\r\n                    </tr>\r\n                    {/* <hr />\r\n                    <tr>\r\n                    <td>Коллеги:</td>\r\n                    <td className={styles.infoAlign}></td>\r\n                </tr> */}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WorkerCard;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { onFullNameChangedAC, onDismissedChangedAC, onPositionChangedAC, onBirthDayChangedAC, onGenderChangedAC } from '../redux/mainReducer';\r\nimport WorkerCard from './WorkerCard';\r\nimport styles from './WorkerCard.module.css'\r\n\r\nclass WorkerCardContainer extends React.Component{\r\n    render(){\r\n        if (this.props.selectedWorker)\r\n            return <WorkerCard positions={this.props.positions}\r\n                               dataWorker={this.props.dataWorker}\r\n\r\n                               onFullNameChanged={this.props.onFullNameChanged}\r\n                               onPositionChanged={this.props.onPositionChanged}\r\n                               onBirthDayChanged={this.props.onBirthDayChanged}\r\n                               onGenderChanged={this.props.onGenderChanged}\r\n                               onDismissedChanged={this.props.onDismissedChanged}\r\n                    />        \r\n        else \r\n            return <div className={styles.emptyWorkerCard}></div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        positions: state.workersPage.positions,\r\n        dataWorker: state.workersPage.dataWorker,\r\n        selectedWorker: state.workersPage.selectedWorker\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onFullNameChanged: onFullNameChangedAC,\r\n    onPositionChanged: onPositionChangedAC,\r\n    onBirthDayChanged: onBirthDayChangedAC,\r\n    onGenderChanged: onGenderChangedAC, \r\n    onDismissedChanged: onDismissedChangedAC\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkerCardContainer);","import React from 'react';\nimport './App.css';\nimport Header from './Header/Header';\nimport WorkersContainer from './Workers/WorkersContainer';\nimport InstrumentsContainer from './Instruments/InstrumentsContainer';\nimport WorkerCardContainer from './WorkerCard/WorkerCardContainer';\n\nfunction App() {\n  return (\n    <div className=\"app-wrapper\">\n      <Header />\n      <InstrumentsContainer />\n      <WorkersContainer />\n      <WorkerCardContainer />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers } from 'redux';\r\nimport workersReducer from './mainReducer';\r\n\r\nlet reducers = combineReducers({\r\n    workersPage: workersReducer\r\n})\r\n\r\nlet store = createStore(reducers); //Генерация redux-store на основе редусора(ов)\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './redux/redux-store'\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"workerCard\":\"WorkerCard_workerCard__1TVrF\",\"emptyWorkerCard\":\"WorkerCard_emptyWorkerCard__2a8Hh\",\"infoAlign\":\"WorkerCard_infoAlign__32-yI\",\"necessaryItem\":\"WorkerCard_necessaryItem__4skMU\",\"blockLine\":\"WorkerCard_blockLine__kkoOa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"worker\":\"Worker_worker__4Qbh8\",\"infoAlign\":\"Worker_infoAlign__3SiMR\",\"invalidWorker\":\"Worker_invalidWorker__104Dv\",\"selectedWorker\":\"Worker_selectedWorker__3PfeN\",\"blockLine\":\"Worker_blockLine__2eTuQ\"};"],"sourceRoot":""}