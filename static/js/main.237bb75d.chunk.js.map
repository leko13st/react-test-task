{"version":3,"sources":["Instruments/Instruments.module.css","Header/Header.module.css","Workers/Workers.module.css","Header/Header.jsx","Workers/Worker/Worker.jsx","Workers/Workers.jsx","redux/mainReducer.js","Workers/WorkersContainer.jsx","Instruments/Instruments.jsx","Instruments/InstrumentsContainer.jsx","WorkerCard/WorkerCard.jsx","WorkerCard/EmptyWorkerCard.jsx","WorkerCard/WorkerCardContainer.jsx","App.js","serviceWorker.js","redux/redux-store.js","index.js","WorkerCard/WorkerCard.module.css","Workers/Worker/Worker.module.css"],"names":["module","exports","Header","className","styles","header","headerTable","width","Worker","props","styleWorkerList","worker","data","invalid","invalidWorker","selectedWorker","id","join","onClick","selectWorker","infoAlign","fullName","position","positions","birthDay","split","reverse","gender","dismissed","Workers","workerList","workers","map","initialState","colleagues","dataWorker","workersReducer","state","action","index","findIndex","idWorker","i","length","getUpdatedWorker","property","person","newFullName","newPosition","getUpdatedWorkers","workerItem","type","array","slice","splice","identify","lastWorker","newWorker","newDate","newGender","newDissmised","WorkersContainer","this","React","Component","mapDispatchToProps","connect","workersPage","Instruments","instruments","buttonCenter","addNewWorker","hideButton","deleteSelectedWorker","InstrumentsContainer","WorkerCard","positionList","selected","disabled","value","workerCard","onChange","event","onFullNameChanged","target","necessaryItem","placeholder","size","onPositionChanged","onBirthDayChanged","onGenderChanged","checked","name","onDismissedChanged","EmptyWorkerCard","emptyWorkerCard","WorkerCardContainer","isInvalid","App","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.237bb75d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"instruments\":\"Instruments_instruments__2n1ih\",\"buttonCenter\":\"Instruments_buttonCenter___Azg2\",\"hideButton\":\"Instruments_hideButton__1Vqyc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2vV3e\",\"headerTable\":\"Header_headerTable__1_7q_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"workers\":\"Workers_workers__1hwM3\"};","import React from 'react';\r\nimport styles from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return(\r\n        <div className={styles.header}>\r\n            <table className={styles.headerTable}>\r\n                <tr>\r\n                    <td width=\"11%\">Панель инструментов</td>\r\n                    <td width>Сотрудники</td>\r\n                    <td>Карточка сотрудника</td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport styles from './Worker.module.css';\r\n\r\nconst Worker = (props) => {\r\n    //Суммирование css-классов\r\n    let styleWorkerList = [\r\n        styles.worker,\r\n        props.data.invalid && styles.invalidWorker,\r\n        props.selectedWorker === props.data.id && styles.selectedWorker,\r\n    ].join(' ');\r\n\r\n    //Форматирование даты в привычный вид ДД-ММ-ГГГГ\r\n    const dateFormatter = () => {\r\n        return props.data.birthDay.split('-').reverse().join('.');\r\n    }\r\n\r\n    return(\r\n        <div className={styleWorkerList} onClick={() => props.selectWorker(props.data.id)}>\r\n            <table>\r\n                <tr>\r\n                    <td>ФИО</td>\r\n                    <td className={styles.infoAlign}>{props.data.fullName}</td>                    \r\n                </tr>\r\n                <hr />\r\n                <tr>\r\n                    <td>Должность</td>\r\n                    <td className={styles.infoAlign}>{props.data.position === props.positions[0] ? '' : props.data.position}</td>                    \r\n                </tr>\r\n                <hr />\r\n                <tr>\r\n                    <td>Дата рождения</td>\r\n                    <td className={styles.infoAlign}>{dateFormatter()}</td>                    \r\n                </tr>\r\n                <hr />\r\n                <tr>\r\n                    <td>Пол</td>\r\n                    <td className={styles.infoAlign}>{props.data.gender === 'male' ? 'Мужчина' : 'Женщина'}</td>                    \r\n                </tr>\r\n                <hr />\r\n                <tr>\r\n                    <td>Статус</td>\r\n                    <td className={styles.infoAlign}>{props.data.dismissed ? 'Уволен(а)' : 'Работает'}</td>                    \r\n                </tr>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Worker;","import React from 'react';\r\nimport styles from './Workers.module.css';\r\nimport Worker from './Worker/Worker';\r\n\r\nconst Workers = (props) => {\r\n\r\n    const selectWorker = (id) => {\r\n        props.selectWorker(id);\r\n    }\r\n\r\n    let workerList = props.workers.map(worker => <Worker data={worker}\r\n                                                         positions={props.positions}\r\n                                                         selectedWorker={props.selectedWorker}\r\n                                                         selectWorker={selectWorker}\r\n    />)\r\n\r\n    return(\r\n        <div className={styles.workers}>\r\n            {workerList}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Workers;","const DELETE_SELECTED_WORKER = 'DELETE_SELECTED_WORKER';\r\nconst ADD_NEW_WORKER = 'ADD_NEW_WORKER';\r\nconst SELECT_WORKER = 'SELECT_WORKER';\r\nconst ON_FULL_NAME_CHANGED = 'ON_FULL_NAME_CHANGED';\r\nconst ON_POSITION_CHANGED = 'ON_POSITION_CHANGED';\r\nconst ON_BIRTH_DAY_CHANGED = 'ON_BIRTH_DATE_CHANGED';\r\nconst ON_GENDER_CHANGED = 'ON_GENDER_CHANGED';\r\nconst ON_DISMISSED_CHANGED = 'ON_DISMISSED_CHANGED';\r\n\r\nlet initialState = {\r\n    //список сотрудников\r\n    workers: [ \r\n        {id: 1, fullName: 'Иванов Иван Иванович', position: 'Директор', birthDay: '1976-08-15', gender: 'male', dismissed: false, colleagues: [4], invalid: false},\r\n        {id: 2, fullName: 'Цаль Виталий Олегович', position: 'Программист', birthDay: '1991-01-19', gender: 'male', dismissed: false, colleagues: [3], invalid: false},\r\n        {id: 3, fullName: 'Иванова Анна Алексеевна', position: 'Аналитик', birthDay: '1998-07-21', gender: 'female', dismissed: false, colleagues: [2], invalid: false},\r\n        {id: 4, fullName: 'Козлов Александр Вадимович', position: 'HR', birthDay: '1990-04-08', gender: 'male', dismissed: true, colleagues: [1, 5], invalid: false},\r\n        {id: 5, fullName: 'Бодров Данила Сергеевич', position: 'Тестер', birthDay: '1985-03-16', gender: 'male', dismissed: false, colleagues: [4], invalid: false}\r\n    ],\r\n    //Список должностей - отправляется в UI в комбобокс\r\n    positions: [\r\n        'Укажите должность...',\r\n        'Директор',\r\n        'Программист',\r\n        'Аналитик',\r\n        'HR',\r\n        'Тестер',\r\n        'Инженер',\r\n        'Бухгалтер',\r\n        'Стажёр'\r\n    ],\r\n    selectedWorker: null, //id выделеннего сотрудника\r\n    dataWorker: null //данные выделенного сотрудника\r\n}\r\n\r\nconst workersReducer = (state = initialState, action) => {\r\n    let index = -1;\r\n    //поиска свободного индекса для назначения его работнику\r\n    let findIndex = (idWorker) => { \r\n        for (let i = 0; i < state.workers.length; i++){\r\n            if (state.workers[i].id === idWorker){\r\n                index = i;\r\n                break\r\n            }\r\n        }\r\n    }\r\n\r\n    //Получить обновлённого данные работника\r\n    let getUpdatedWorker = (property) => {\r\n        let worker = null;\r\n        state.workers.map(person => {\r\n            if (person.id === state.selectedWorker)\r\n                worker = person;\r\n            return null;\r\n        })\r\n\r\n        if (property === \"fullName\")\r\n            worker.fullName = action.newFullName;\r\n        else if (property === \"position\")\r\n            worker.position = action.newPosition;\r\n        \r\n        if (worker.fullName === '' || worker.position === state.positions[0])\r\n            worker.invalid = true;\r\n        else \r\n            worker.invalid = false;\r\n\r\n        return worker;\r\n    }\r\n\r\n    //Получить обновлённый список данных работников\r\n    let getUpdatedWorkers = (worker) => {\r\n            return state.workers.map(workerItem => {\r\n                if (workerItem.id === state.selectedWorker)\r\n                    return worker;                    \r\n                else\r\n                    return workerItem;\r\n            })\r\n    }\r\n\r\n    switch (action.type){\r\n        //здесь обрабатываются диспатчи\r\n        case DELETE_SELECTED_WORKER: {\r\n            findIndex(state.selectedWorker);           \r\n            let array = state.workers.slice(0);\r\n            array.splice(index, 1)\r\n\r\n            return{\r\n                ...state,\r\n                workers: array,\r\n                selectedWorker: null               \r\n            }\r\n        }\r\n        case ADD_NEW_WORKER: {\r\n            let identify = () => {\r\n                let lastWorker = state.workers[state.workers.length - 1];\r\n                if (lastWorker)\r\n                    return lastWorker.id + 1\r\n                else return 1;\r\n            }\r\n\r\n            let newWorker = {\r\n                id: identify(), \r\n                fullName: '', \r\n                position: state.positions[0],\r\n                birthDay: '',\r\n                gender: 'male',\r\n                dismissed: false,\r\n                invalid: true\r\n            }\r\n            return{\r\n                ...state,\r\n                workers: [...state.workers, newWorker],\r\n                dataWorker: newWorker,\r\n                selectedWorker: newWorker.id\r\n            }\r\n        }\r\n        case SELECT_WORKER: {\r\n            findIndex(action.idWorker);     \r\n            let worker = state.workers.slice(0).splice(index, 1)[0]\r\n\r\n            return{\r\n                ...state,\r\n                selectedWorker: action.idWorker,\r\n                dataWorker: worker\r\n            }\r\n        }\r\n        case ON_FULL_NAME_CHANGED: {\r\n            \r\n            let worker = getUpdatedWorker('fullName'); \r\n\r\n            return {\r\n                ...state,\r\n                workers: getUpdatedWorkers(worker),\r\n                dataWorker: {...state.dataWorker, fullName: action.newFullName, invalid: worker.invalid}\r\n            }\r\n        }\r\n        case ON_POSITION_CHANGED: {\r\n\r\n            let worker = getUpdatedWorker('position');\r\n\r\n            return{\r\n                ...state,\r\n                workers: getUpdatedWorkers(worker),\r\n                dataWorker: {...state.dataWorker, position: action.newPosition, invalid: worker.invalid}\r\n            }\r\n        }\r\n        case ON_BIRTH_DAY_CHANGED: {\r\n            return{\r\n                ...state,\r\n                workers: state.workers.map(worker => {\r\n                    if (worker.id === state.selectedWorker)\r\n                        worker.birthDay = action.newDate;\r\n                    return worker;\r\n                }),\r\n                dataWorker: {...state.dataWorker, birthDay: action.newDate}\r\n            }\r\n        }\r\n        case ON_GENDER_CHANGED: {\r\n            return{\r\n                ...state,\r\n                workers: state.workers.map(worker => {\r\n                    if (worker.id === state.selectedWorker)\r\n                        worker.gender = action.newGender;\r\n                    return worker;\r\n                }),\r\n                dataWorker: {...state.dataWorker, gender: action.newGender}\r\n            }\r\n        }\r\n        case ON_DISMISSED_CHANGED: {\r\n            return{\r\n                ...state,\r\n                workers: state.workers.map(worker => {\r\n                    if (worker.id === state.selectedWorker)\r\n                        worker.dismissed = action.newDissmised;\r\n                    return worker;\r\n                }),\r\n                dataWorker: {...state.dataWorker, dismissed: action.newDissmised}\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const deleteSelectedWorkedAC = () => ({type: DELETE_SELECTED_WORKER});\r\nexport const addNewWorkerAC = () => ({type: ADD_NEW_WORKER});\r\nexport const selectWorkerAC = (idWorker) => ({type: SELECT_WORKER, idWorker});\r\nexport const onFullNameChangedAC = (newFullName, isInvalid) => ({type: ON_FULL_NAME_CHANGED, newFullName, isInvalid});\r\nexport const onPositionChangedAC = (newPosition) => ({type: ON_POSITION_CHANGED, newPosition});\r\nexport const onBirthDayChangedAC = (newDate) => ({type: ON_BIRTH_DAY_CHANGED, newDate});\r\nexport const onGenderChangedAC = (newGender) => ({type: ON_GENDER_CHANGED, newGender});\r\nexport const onDismissedChangedAC = (newDissmised) => ({type: ON_DISMISSED_CHANGED, newDissmised});\r\n\r\nexport default workersReducer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Workers from './Workers';\r\nimport { selectWorkerAC } from '../redux/mainReducer';\r\n\r\nclass WorkersContainer extends React.Component{\r\n    render(){\r\n        return <Workers workers={this.props.workers}\r\n                        positions={this.props.positions}\r\n                        selectedWorker={this.props.selectedWorker}\r\n                        selectWorker={this.props.selectWorker}\r\n        />        \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        workers: state.workersPage.workers,\r\n        selectedWorker: state.workersPage.selectedWorker,\r\n        positions: state.workersPage.positions\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    selectWorker: selectWorkerAC\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkersContainer);","import React from 'react';\r\nimport styles from './Instruments.module.css';\r\n\r\nconst Instruments = (props) => {\r\n    return(\r\n        <div className={styles.instruments}>\r\n            <div className={styles.buttonCenter}>\r\n                <button onClick={props.addNewWorker}>Добавить</button>\r\n            </div>\r\n            <div className={styles.buttonCenter}>\r\n                <button className={!props.selectedWorker && styles.hideButton} onClick={props.deleteSelectedWorker}>Удалить</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Instruments;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteSelectedWorkedAC, addNewWorkerAC } from '../redux/mainReducer';\r\nimport Instruments from './Instruments';\r\n\r\nclass InstrumentsContainer extends React.Component{\r\n    render(){\r\n        return <Instruments deleteSelectedWorker={this.props.deleteSelectedWorker}\r\n                            addNewWorker={this.props.addNewWorker}\r\n                            selectedWorker={this.props.selectedWorker}/>        \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        selectedWorker: state.workersPage.selectedWorker\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    deleteSelectedWorker: deleteSelectedWorkedAC,\r\n    addNewWorker: addNewWorkerAC\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InstrumentsContainer);","import React from 'react';\r\nimport styles from './WorkerCard.module.css';\r\n\r\nconst WorkerCard = (props) => {\r\n    let positionList = props.positions.map((position, index) => {\r\n        if (index === 0)\r\n            return (<option selected disabled value={position}>{position}</option>)\r\n        \r\n        if (props.dataWorker.position === position)\r\n            return (<option selected value={position}>{position}</option>)        \r\n        else\r\n            return (<option value={position}>{position}</option>)\r\n        }\r\n    )\r\n\r\n    let gender = () => {\r\n        if (props.dataWorker.gender === 'male'){\r\n            return (\r\n                <>\r\n                    <input checked name=\"gender\" type=\"radio\" value=\"male\"/>Муж.\r\n                    <input name=\"gender\" type=\"radio\" value=\"female\"/>Жен.\r\n                </>\r\n            )\r\n        }\r\n        else if (props.dataWorker.gender === 'female') {\r\n            return (\r\n                <> \r\n                    <input name=\"gender\" type=\"radio\" value=\"male\"/>Муж.\r\n                    <input checked name=\"gender\" type=\"radio\" value=\"female\"/>Жен.\r\n                </>\r\n            )\r\n        }   \r\n    }\r\n\r\n    let idDismissed = () => {\r\n        if (props.dataWorker.dismissed)\r\n            return <input checked type=\"checkbox\"/>\r\n        else \r\n            return <input type=\"checkbox\"/>\r\n    }\r\n\r\n    const onFullNameChanged = (event) => {\r\n        props.onFullNameChanged(event.target.value);\r\n    }\r\n\r\n    const onPositionChanged = (event) => {        \r\n        props.onPositionChanged(event.target.value);\r\n    }\r\n\r\n    const onBirthDayChanged = (event) => {\r\n        props.onBirthDayChanged(event.target.value);\r\n    }\r\n\r\n    const onGenderChanged = (event) => {\r\n        props.onGenderChanged(event.target.value);\r\n    }\r\n\r\n    const onDismissedChanged = (event) => {\r\n        props.onDismissedChanged(event.target.checked);\r\n    }\r\n\r\n    return(\r\n        <div className={styles.workerCard}>\r\n            <table>\r\n                <tr onChange={onFullNameChanged}>\r\n                    <td>ФИО:</td>\r\n                    <td className={styles.infoAlign}>\r\n                        <span className={styles.necessaryItem}>* </span>\r\n                        <input type=\"text\" placeholder=\"Заполните поле\" value={props.dataWorker.fullName} size=\"30\" />\r\n                    </td>\r\n                </tr>\r\n                <hr />\r\n                <tr onChange={onPositionChanged}>\r\n                    <td>Должность:</td>\r\n                    <td className={styles.infoAlign}>\r\n                        <span className={styles.necessaryItem}>* </span>\r\n                        <select>\r\n                            {positionList}\r\n                        </select>   \r\n                    </td>\r\n                </tr>\r\n                <hr />\r\n                <tr onChange={onBirthDayChanged}>\r\n                    <td>Дата рождения:</td>\r\n                    <td className={styles.infoAlign}><input type=\"date\" value={props.dataWorker.birthDay}/></td>\r\n                </tr>\r\n                <hr />\r\n                <tr onChange={onGenderChanged}>\r\n                    <td>Пол:</td>\r\n                    <td className={styles.infoAlign}>{gender()}</td>\r\n                </tr>\r\n                <hr />\r\n                <tr onChange={onDismissedChanged}>\r\n                    <td>Статус:</td>\r\n                    <td className={styles.infoAlign}>{props.dataWorker.dismissed ? 'Уволен' : 'Работает'} {idDismissed()}</td>\r\n                </tr>\r\n                {/* <hr />\r\n                <tr>\r\n                    <td>Коллеги:</td>\r\n                    <td className={styles.infoAlign}></td>\r\n                </tr> */}\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WorkerCard;","import React from 'react';\r\nimport styles from './WorkerCard.module.css';\r\n\r\nconst EmptyWorkerCard = () => {    \r\n    return <div className={styles.emptyWorkerCard}></div>\r\n}\r\n\r\nexport default EmptyWorkerCard;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { onFullNameChangedAC, onDismissedChangedAC, onPositionChangedAC, onBirthDayChangedAC, onGenderChangedAC } from '../redux/mainReducer';\r\nimport WorkerCard from './WorkerCard';\r\nimport EmptyWorkerCard from './EmptyWorkerCard';\r\n\r\nclass WorkerCardContainer extends React.Component{\r\n    render(){\r\n        if (this.props.selectedWorker)\r\n            return <WorkerCard positions={this.props.positions}\r\n                               dataWorker={this.props.dataWorker}\r\n\r\n                               onFullNameChanged={this.props.onFullNameChanged}\r\n                               onPositionChanged={this.props.onPositionChanged}\r\n                               onBirthDayChanged={this.props.onBirthDayChanged}\r\n                               onGenderChanged={this.props.onGenderChanged}\r\n                               onDismissedChanged={this.props.onDismissedChanged}\r\n                               />        \r\n        else \r\n            return <EmptyWorkerCard />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        positions: state.workersPage.positions,\r\n        dataWorker: state.workersPage.dataWorker,\r\n        selectedWorker: state.workersPage.selectedWorker\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onFullNameChanged: onFullNameChangedAC,\r\n    onPositionChanged: onPositionChangedAC,\r\n    onBirthDayChanged: onBirthDayChangedAC,\r\n    onGenderChanged: onGenderChangedAC, \r\n    onDismissedChanged: onDismissedChangedAC\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkerCardContainer);","import React from 'react';\nimport './App.css';\nimport Header from './Header/Header';\nimport WorkersContainer from './Workers/WorkersContainer';\nimport InstrumentsContainer from './Instruments/InstrumentsContainer';\nimport WorkerCardContainer from './WorkerCard/WorkerCardContainer';\n\nfunction App() {\n  return (\n    <div className=\"app-wrapper\">\n      <Header />\n      <InstrumentsContainer />\n      <WorkersContainer />\n      <WorkerCardContainer />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers } from 'redux';\r\nimport workersReducer from './mainReducer';\r\n\r\nlet reducers = combineReducers({\r\n    workersPage: workersReducer\r\n})\r\n\r\nlet store = createStore(reducers); //Генерация redux-store на основе редусора(ов)\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './redux/redux-store'\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"workerCard\":\"WorkerCard_workerCard__1TVrF\",\"emptyWorkerCard\":\"WorkerCard_emptyWorkerCard__2a8Hh\",\"infoAlign\":\"WorkerCard_infoAlign__32-yI\",\"necessaryItem\":\"WorkerCard_necessaryItem__4skMU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"worker\":\"Worker_worker__4Qbh8\",\"infoAlign\":\"Worker_infoAlign__3SiMR\",\"invalidWorker\":\"Worker_invalidWorker__104Dv\",\"selectedWorker\":\"Worker_selectedWorker__3PfeN\"};"],"sourceRoot":""}